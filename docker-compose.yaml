version: '3'

services:
  # scheduler:
  #   image: mcuadros/ofelia:latest
  #   container_name: scheduler
  #   depends_on:
  #     - plextraktsync
  #   command: daemon --docker
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   labels:
  #     ofelia.job-run.plextraktsync.schedule: "@every 6h"
  #     ofelia.job-run.plextraktsync.container: "plextraktsync"
  # plextraktsync:
  #   image: ghcr.io/taxel/plextraktsync:latest
  #   container_name: plextraktsync
  #   command: sync
  #   volumes:
  #     - ./plextraktsync:/app/config
# =================================================================================================
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    ports:
      - 7878:7878
    volumes:
      - ./radarr:/config
      - /mnt/media/:/media/
      # - /mnt/1tb/downloading:/mnt/downloads
    environment:
      - PUID=1000
      - PGID=1000
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    ports:
      - 8989:8989
    #   # - 9898:9898
    volumes:
      - ./sonarr:/config
      - /mnt/media/:/media/
    environment:
      - PUID=1000
      - PGID=1000
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:plex
      - TP_ADDON=plex
    # networks:
    #   - media_network
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    restart: unless-stopped
    ports:
      - 8080:8080
    #   - 8081:80
    #   - 6881:6881
    #   - 6881:6881/udp
    volumes:
      - ./qbittorrent:/config
      - /mnt/media/:/media/
      - ./temp/:/temp/
    environment:
      - PUID=1000
      - PGID=1000
  # readarr:
  #   image: lscr.io/linuxserver/readarr:develop
  #   container_name: readarr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #   volumes:
  #     - ./readarr/config:/config
  #     - /mnt/1tb/root:/mnt/root
  #     - /mnt/1tb/books:/mnt/downloads
  #   ports:
  #     - 8787:8787
  #   restart: unless-stopped
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=Asia/Tokyo
    ports:
      - 5055:5055
    volumes:
      - ./overseerr/:/app/config
    restart: unless-stopped
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./tautulli:/config
    ports:
      - 8181:8181
    restart: unless-stopped
  # filebot:
  #     container_name: filebot
  #     ports:
  #         - '5800:5800'
  #     volumes:
  #         - ./filebot:/config:rw
  #         - /mnt/media/:/storage:rw
  #     image: jlesage/filebot
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./bazarr/:/config
      - /mnt/media/movies/:/media/movies
      - /mnt/media/shows/:/media/shows
    ports:
      - 6767:6767
    restart: unless-stopped
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: unless-stopped
    ports:
      - 9117:9117
    volumes:
      - ./jackett:/config
    environment:
      - PUID=1000
      - PGID=1000
    # networks:
    #   - media_network
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    ports:
      - 8191:8191
    environment:
      - PUID=1000
      - PGID=1000
  filebrowser:
    container_name: filebrowser
    image: hurlenko/filebrowser
    user: "1000:1000"
    ports:
      - 8088:8080
    volumes:
      - /mnt/media/:/data
      - ./filebrowser/config:/config
    environment:
      - FB_BASEURL=/filebrowser
    restart: always
  #   # networks:
  #   #   - media_network
  # nginx:
  #   image: nginx
  #   container_name: nginx
  #   restart: unless-stopped
  #   volumes:
  #     - ./nginx/radarr-001-001.conf:/etc/nginx/nginx.conf:ro
  #     # - ./nginx/ssl/nginx-selfsigned.crt:/etc/ssl/certs/nginx-selfsigned.crt:ro
  #     # - ./nginx/ssl/nginx-selfsigned.key:/etc/ssl/private/nginx-selfsigned.key:ro
  #     # - ./nginx/ssl/localhost.crt:/etc/ssl/certs/nginx-selfsigned.crt:ro
  #     # - ./nginx/ssl/localhost.key:/etc/ssl/private/nginx-selfsigned.key:ro
  #     - ./nginx/ssl/home-server.crt:/etc/ssl/certs/nginx-selfsigned.crt:ro
  #     - ./nginx/ssl/home-server.key:/etc/ssl/private/nginx-selfsigned.key:ro
  #     - ./nginx/ssl/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro
  #   ports:
  #     - 80:80  # HTTP port
  #     - 443:443  # HTTPS port (if you're using SSL)
  #   depends_on:
  #     # - plex
  #     - radarr
  #     - sonarr
  #     - jackett
  #     - readarr
  #     - bazarr
