worker_processes auto;
events {
    worker_connections 1024;
}

http {
    sendfile on;

    server {
        listen 80;
        server_name localhost;

        location /radarr {
            proxy_pass http://radarr:7878;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Url-Scheme $scheme;
            proxy_redirect off;
            rewrite ^/radarr(/.*)$ $1 break;

            # Handle the sub_filter to rewrite URLs in Radarr HTML responses
            sub_filter '="/' '="/radarr/';
            sub_filter_once off;
        }

        location / {
            return 404; # Return 404 for requests to the root path '/' (or you can handle it differently if needed).
        }
    }

    # If you want to enable HTTPS/SSL, uncomment the following section:

    # server {
    #     listen 443 ssl;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/nginx/ssl/server.crt;
    #     ssl_certificate_key /etc/nginx/ssl/server.key;
    #
    #     location /radarr {
    #         proxy_pass http://radarr:7878;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_set_header X-Forwarded-Host $host;
    #         proxy_set_header X-Forwarded-Port $server_port;
    #         proxy_set_header X-Url-Scheme $scheme;
    #         proxy_redirect off;
    #         rewrite ^/radarr(/.*)$ $1 break;
    #
    #         # Handle the sub_filter to rewrite URLs in Radarr HTML responses
    #         sub_filter '="/' '="/radarr/';
    #         sub_filter_once off;
    #     }
    #
    #     location / {
    #         return 404; # Return 404 for requests to the root path '/' (or you can handle it differently if needed).
    #     }
    # }
}
